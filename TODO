kheap/
  first task beign created after 0x7000 bytes from KHEAP_BASE
  new tasks beign created with a 0x3000 bytes difference
  uncomment main code that create ANDERSON and CAROLINA tasks and see the magic :(

network/
  enabling the protocol stack to run it raises a page fault after a while of arping
  the page where the task is beign created do not increase, so... how the fuck

network/architecture
  NETWORK STACK ISN'T FIRING INTERUPT WHEN THE FIRST? MESSAGE ARRIVES, BUT MESSAGES ARE BEING WRITTEN TO MEMORY.
    ONLY IN SPECIF CASES WHICH ARE UNKNOWN UNTIL THIS DATE
    scenario: ping after an ARP (ping -I tap0 1.2.3.4)

    hint: create a thread for each message handle
    function prototype for task entrypoint: *void
    receive the parametrs in create_task

network/ICMP(bugged):
  ARP PACKET INSIDE ICMP REPLY DATA
    probably error on pointer handling on multiple received packets

network/ICMP:
  GET MAC_ADDR FROM ARP TABLE
  REVIEW "IDENTIFIER" AND "SEQUENCE NUMBER" FIELDS IN ECHO REQUEST/REPLY

network/IP:
  create a mac/ip checks on distinct functions

network:
  FREE() PACKETS;
  VERIFY WHEN UNLOCK INTERRUPTS.

network/ARP:
  ADD ARP TABLE ENTRY WHEN WE RECEIVE A PACKET FROM AN UNKNOWN HOST

network/IP:
  FRAGMENTATION

drivers/pit:
  ADD GET_TIME FUNCTION

review:
  "BABY STEP" TUTORIAL
